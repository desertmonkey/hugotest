[
{
	"uri": "http://docs.cumulusnetworks.com/cumulus-linux/system-configuration/nclu/",
	"title": "NCLU Network Command Line Utility",
	"tags": [],
	"description": "",
	"content": " The Network Command Line Utility (NCLU) is a command line interface for Cumulus Networks products that simplifies the networking configuration process for all users.\nNCLU resides in the Linux user space and provides consistent access to networking commands directly through bash, making configuration and troubleshooting simple and easy; no need to edit files or enter modes and sub-modes. NCLU:\n Embeds help, examples, and automatic command checking with suggestions in case you enter a typo. Runs directly from and integrates with bash, while being interoperable with the regular way of accessing underlying configuration files and automation. Configures dependent features automatically so that you don’t have to.  The NCLU wrapper utility called net is capable of configuring layer 2 and layer 3 features of the networking stack, installing ACLs and VXLANs, rolling back and deleting snapshots, as well as providing monitoring and troubleshooting functionality for these features. You can configure both the /etc/network/interfaces and /etc/frr/frr.conf files with net, in addition to running show and clear commands related to ifupdown2 and FRRouting.\nInstall NCLU If you upgraded Cumulus Linux from a version earlier than 3.2 instead of performing a full binary install, you need to install the nclu package on your switch:\ncumulus@switch:~$ sudo -E apt-get update cumulus@switch:~$ sudo -E apt-get install nclu cumulus@switch:~$ sudo -E apt-get upgrade  The nclu package installs a new bash completion script and displays the following message:\nSetting up nclu (1.0-cl3u3) ... To enable the newly installed bash completion for nclu in this shell, execute... source /etc/bash_completion   NCLU Basics Use the following workflow to stage and commit changes to Cumulus Linux with NCLU:\n Use the net add and net del commands to stage and remove configuration changes. Use the net pending command to review staged changes. Use net commit and net abort to commit and delete staged changes.   net commit applies the changes to the relevant configuration files, such as /etc/network/interfaces, then runs necessary follow on commands to enable the configuration, such as ifreload -a.\nIf two different users try to commit a change at the same time, NCLU displays a warning but implements the change according to the first commit received. The second user will need to abort the commit.\n When you have a running configuration, you can review and update the configuration with the following commands:\n net show is series of commands for viewing various parts of the network configuration. For example, use net show configuration to view the complete network configuration, net show commit historyto view a history of commits using NCLU, and net show bgp to view BGP status. net clear provides a way to clear net show counters, BGP and OSPF neighbor content, and more. net rollback provides a mechanism to revert back to an earlier configuration. net commit confirm requires you to press _Enter_ to commit changes using NCLU. If you run net commit confirm but do not press Enter within 10 seconds, the commit automatically reverts and no changes are made. net commit permanent retains the ac:linkac:plain-text-link-body/ac:plain-text-link-body/ri:page/ac:linktaken when committing the change. Otherwise, the snapshots created from NCLU commands are cleaned up periodically with a snapper cron job.  net commit delete deletes one or more snapshots created when committing changes with NCLU. net del all deletes all configurations and stops the IEEE 802.1X service.  This command does not remove ac:linkac:plain-text-link-body/ac:plain-text-link-body/ri:page/ac:linkconfigurations, as NCLU does not interact with eth0 interfaces and management VRF.\n Tab Completion, Verification, and Inline Help In addition to tab completion and partial keyword command identification, NCLU includes verification checks to ensure correct syntax is used. The examples below show the output for incorrect commands:\ncumulus@switch:~$ net add bgp router-id 1.1.1.1/32 ERROR: Command not found Did you mean one of the following? net add bgp router-id \u0026lt;ipv4\u0026gt; This command is looking for an IP address, not an IP/prefixlen cumulus@switch:~$ net add bgp router-id 1.1.1.1 cumulus@switch:~$ net add int swp10 mtu \u0026lt;TAB\u0026gt; \u0026lt;552-9216\u0026gt; : cumulus@switch:~$ net add int swp10 mtu 9300 ERROR: Command not found Did you mean one of the following? net add interface \u0026lt;interface\u0026gt; mtu \u0026lt;552-9216\u0026gt;  NCLU has a comprehensive built in help system. In addition to the net man page, you can use ? and help to display available commands:\n  net help Output   cumulus@switch:~$ net help Usage: # net \u0026lt;COMMAND\u0026gt; [\u0026lt;ARGS\u0026gt;] [help] # # net is a command line utility for networking on Cumulus Linux switches. # # COMMANDS are listed below and have context specific arguments which can # be explored by typing \u0026quot;\u0026lt;TAB\u0026gt;\u0026quot; or \u0026quot;help\u0026quot; anytime while using net. # # Use 'man net' for a more comprehensive overview. net abort net commit [verbose] [confirm] [description \u0026lt;wildcard\u0026gt;] net commit delete (\u0026lt;number\u0026gt;|\u0026lt;number-range\u0026gt;) net help [verbose] net pending net rollback (\u0026lt;number\u0026gt;|last) net show commit (history|\u0026lt;number\u0026gt;|\u0026lt;number-range\u0026gt;|last) net show rollback (\u0026lt;number\u0026gt;|last) net show configuration [commands|files|acl|bgp|ospf|ospf6|interface \u0026lt;interface\u0026gt;] Options: # Help commands help : context sensitive information; see section below example : detailed examples of common workflows # Configuration commands add : add/modify configuration del : remove configuration # Commit buffer commands abort : abandon changes in the commit buffer commit : apply the commit buffer to the system pending : show changes staged in the commit buffer rollback : revert to a previous configuration state # Status commands show : show command output clear : clear counters, BGP neighbors, etc cumulus@switch:~$ net help bestpath The following commands contain keyword(s) 'bestpath' net (add|del) bgp bestpath as-path multipath-relax [as-set|no-as-set] net (add|del) bgp bestpath compare-routerid net (add|del) bgp bestpath med missing-as-worst net (add|del) bgp vrf \u0026lt;text\u0026gt; bestpath as-path multipath-relax [as-set|no-as-set] net (add|del) bgp vrf \u0026lt;text\u0026gt; bestpath compare-routerid net (add|del) bgp vrf \u0026lt;text\u0026gt; bestpath med missing-as-worst net add bgp debug bestpath \u0026lt;ip/prefixlen\u0026gt; net del bgp debug bestpath [\u0026lt;ip/prefixlen\u0026gt;] net show bgp (\u0026lt;ipv4\u0026gt;|\u0026lt;ipv4/prefixlen\u0026gt;) [bestpath|multipath] [json] net show bgp (\u0026lt;ipv6\u0026gt;|\u0026lt;ipv6/prefixlen\u0026gt;) [bestpath|multipath] [json] net show bgp vrf \u0026lt;text\u0026gt; (\u0026lt;ipv4\u0026gt;|\u0026lt;ipv4/prefixlen\u0026gt;) [bestpath|multipath] [json]  plugin:content-inject\n  You can configure multiple interfaces at once:\ncumulus@switch:~$ net add int swp7-9,12,15-17,22 mtu 9216   Add ? (Question Mark) Ability to NCLU While tab completion is enabled by default, you can also configure NCLU to use the ? (question mark character) to look at available commands. To enable this feature for the _cumulus_ user, open the following file:\ncumulus@leaf01:~$ sudo nano ~/.inputrc  Uncomment the very last line in the .inputrc file so that the file changes from this:\n# Uncomment to use ? as an alternative to # ?: complete  to this:\n# Uncomment to use ? as an alternative to ?: complete  Save the file and reconnect to the switch. The ? (question mark) ability will work on all subsequent sessions on the switch.\ncumulus@leaf01:~$ net abort : abandon changes in the commit buffer add : add/modify configuration clear : clear counters, BGP neighbors, etc commit : apply the commit buffer to the system del : remove configuration example : detailed examples of common workflows help : Show this screen and exit pending : show changes staged in the commit buffer rollback : revert to a previous configuration state show : show command output  When the question mark is typed, NCLU autocompletes and shows all available options, but the question mark does not actually appear on the terminal. This is normal, expected behavior.\n Built-In Examples NCLU has a number of built in examples to guide users through basic configuration setup:\ncumulus@switch:~$ net example acl : access-list bgp : Border Gateway Protocol bond : Bond, port-channel, etc bridge : A layer2 bridge clag : Multi-Chassis Link Aggregation dot1x : Configure, Enable, Delete or Show IEEE 802.1X EAPOL link-settings : Physical link parameters lnv : Lightweight Network Virtualization management-vrf : Management VRF mlag : Multi-Chassis Link Aggregation ospf : Open Shortest Path First (OSPFv2) vlan-interfaces : IP interfaces for VLANs cumulus@switch:~$ net example bridge Scenario ======== We are configuring switch1 and would like to configure the following - configure switch1 as an L2 switch for host-11 and host-12 - enable vlans 10-20 - place host-11 in vlan 10 - place host-12 in vlan 20 - create an SVI interface for vlan 10 - create an SVI interface for vlan 20 - assign IP 10.0.0.1/24 to the SVI for vlan 10 - assign IP 20.0.0.1/24 to the SVI for vlan 20 - configure swp3 as a trunk for vlans 10, 11, 12 and 20 swp3 *switch1 --------- switch2 /\\ swp1 / \\ swp2 / \\ / \\ host-11 host-12 switch1 net commands ==================== - enable vlans 10-20 switch1# net add vlan 10-20 - place host-11 in vlan 10 - place host-12 in vlan 20 switch1# net add int swp1 bridge access 10 switch1# net add int swp2 bridge access 20 - create an SVI interface for vlan 10 - create an SVI interface for vlan 20 - assign IP 10.0.0.1/24 to the SVI for vlan 10 - assign IP 20.0.0.1/24 to the SVI for vlan 20 switch1# net add vlan 10 ip address 10.0.0.1/24 switch1# net add vlan 20 ip address 20.0.0.1/24 - configure swp3 as a trunk for vlans 10, 11, 12 and 20 switch1# net add int swp3 bridge trunk vlans 10-12,20 # Review and commit changes switch1# net pending switch1# net commit Verification ============ switch1# net show interface switch1# net show bridge macs  Configure User Accounts You can configure user accounts in Cumulus Linux with read-only or edit permissions for NCLU:\n You create user accounts with read-only permissions for NCLU by adding them to the netshow group. A user in the netshow group can run NCLU net show commands, such as net show interface or net show config, and certain general Linux commands, such as ls, cd or man, but cannot run net add, net del or net commit commands. You create user accounts with edit permissions for NCLU by adding them to the netedit group. A user in the netedit group can run NCLU configuration commands, such net add, net del or net commit in addition to NCLU net show commands.  The examples below demonstrate how to add a new user account or modify an existing user account called myuser.\nTo add a new user account with NCLU show permissions:\ncumulus@switch:~$ sudo adduser --ingroup netshow myuser Adding user `myuser' ... Adding new user `myuser' (1001) with group `netshow' …  To add NCLU show permissions to a user account that already exists:\ncumulus@switch:~$ sudo addgroup myuser netshow Adding user `myuser' to group `netshow' ... Adding user myuser to group netshow Done  To add a new user account with NCLU edit permissions:\ncumulus@switch:~$ sudo adduser --ingroup netedit myuser Adding user `myuser' ... Adding new user `myuser' (1001) with group `netedit' …  To add NCLU edit permissions to a user account that already exists:\ncumulus@switch:~$ sudo addgroup myuser netedit Adding user `myuser' to group `netedit' ... Adding user myuser to group netedit Done  You can use the adduser command for local user accounts only. You can use the addgroup command for both local and remote user accounts. For a remote user account, you must use the mapping username, such as tacacs3 or radius_user, not the ac:linkac:plain-text-link-body/ac:plain-text-link-body/ri:page/ac:linkor ac:linkac:plain-text-link-body/ac:plain-text-link-body/ri:page/ac:linkaccount name.\n If the user tries to run commands that are not allowed, the following error displays:\nmyuser@switch:~$ net add hostname host01 ERROR: User username does not have permission to make networking changes.  Edit the netd.conf File Instead of using the NCLU commands described above, you can manually configure users and groups to be able to run NCLU commands. Edit the /etc/netd.conf file to add users to the _users_withedit and _users_withshow lines in the file, then save the file.\nFor example, if you want the user netoperator to be able to run both edit and show commands, add the user to the users_with_edit and users_with_show lines in the /etc/netd.conf file:\ncumulus@switch:~$ sudo nano /etc/netd.conf # Control which users/groups are allowed to run 'add', 'del', # 'clear', 'net abort', 'net commit' and restart services # to apply those changes users_with_edit = root, cumulus, netoperator groups_with_edit = root, cumulus # Control which users/groups are allowed to run 'show' commands users_with_show = root, cumulus, netoperator groups_with_show = root, cumulus  To configure a new user group to use NCLU, add that group to the groups_with_edit and groups_with_show lines in the file.\nUse caution giving edit permissions to groups. For example, don\u0026rsquo;t give edit permissions to the ac:link-bodytacacs group/ac:link-body/ri:page/ac:link.\n Restart the netd Service Whenever you modify netd.conf, you must restart the netd service for the changes to take effect:\ncumulus@switch:~$ sudo systemctl restart netd.service  Back Up the Configuration to a Single File You can easily back up your NCLU configuration to a file by outputting the results of net show configuration commands to a file, then retrieving the contents of the file using the source command. You can then view the configuration at any time or copy it to other switches and use the source command to apply that configuration to those switches. For example, to copy the configuration of a leaf switch called leaf01, run the following command:\ncumulus@leaf01:~$ net show configuration commands \u0026gt;\u0026gt; leaf01.txt  With the commands all stored in a single file, you can now copy this file to another ToR switch in your network called leaf01 and apply the configuration by running:\ncumulus@leaf01:~$ source leaf01.txt  Advanced Configuration NCLU needs no initial configuration; it is ready to go in Cumulus Linux. However, if you need to modify its configuration, you must manually update the /etc/netd.conf file. You can configure this file to allow different permission levels for users to edit configurations and run show commands. It also contains a blacklist that hides less frequently used terms from the tabbed autocomplete.    Configuration Variable Default Setting Description     show_linux_command False When true, displays the Linux command running in the background.   enable_ifupdown2 True Enables net wrapping of ifupdown2 commands.   enable_frr True Enables net wrapping of FRRouting commands.   users_with_edit root, cumulus Sets the Linux users with root edit privileges.   groups_with_edit root, cumulus Sets the Linux groups with root edit privileges.   users_with_show root, cumulus Controls which users are allowed to run show commands.   groups_with_show root, cumulus Controls which groups are allowed to run show commands.   ifupdown_blacklist address-purge, bond-ad-actor-sys-prio, bond-ad-actor-system, bond-mode, bond-num-grat-arp, bond-num-unsol-na, bond-use-carrier, bond-xmit-hash-policy, bridge-bridgeprio, bridge-fd, bridge-hashel, bridge-hashmax, bridge-hello, bridge-maxage, bridge-maxwait, bridge-mclmc, bridge-mclmi, bridge-mcmi, bridge-mcqi, bridge-mcqpi, bridge-mcqri, bridge-mcrouter, bridge-mcsqc, bridge-mcsqi, bridge-pathcosts, bridge-port-pvids, bridge-port-vids, bridge-portprios, bridge-stp, bridge-waitport, broadcast, hwaddress, link-type, mstpctl-ageing, mstpctl-fdelay, mstpctl-forcevers, mstpctl-hello, mstpctl-maxage, mstpctl-maxhops, mstpctl-portp2p, mstpctl-portpathcost, mstpctl-portrestrrole, mstpctl-portrestrtcn, mstpctl-treeportcost, mstpctl-treeportprio, mstpctl-txholdcount, netmask, preferred-lifetime, scope, vxlan-ageing, vxlan-learning, up, down, bridge-ageing, bridge-gcint, bridge-mcqifaddr, bridge-mcqv4src Hides corner case command options from tab complete, to simplify and streamline output.    net provides an environment variable to set where the net output is directed. To only use stdout, set the NCLU_TAB_STDOUT environment variable to true. The value is not case sensitive.\n "
},
{
	"uri": "http://docs.cumulusnetworks.com/cumulus-linux/quick-start-guide/",
	"title": "Quick Start Guide",
	"tags": [],
	"description": "",
	"content": " This quick start guide provides an end-to-end setup process for installing and running Cumulus Linux, as well as a collection of example commands for getting started after installation is complete.\nPrerequisites  Intermediate-level Linux knowledge is assumed for this guide. You should be familiar with basic text editing, Unix file permissions, and process monitoring. A variety of text editors are pre-installed, including vi and nano. You must have access to a Linux or UNIX shell. If you are running Windows, use a Linux environment like Cygwin as your command line tool for interacting with Cumulus Linux.  If you are a networking engineer but are unfamiliar with Linux concepts, refer to this reference guide to compare the Cumulus Linux CLI and configuration options, and their equivalent Cisco Nexus 3000 NX-OS commands and settings. You can also watch a series of short videos introducing you to Linux and Cumulus Linux-specific concepts.\n Installation To install Cumulus Linux, you use ONIE (Open Network Install Environment), an extension to the traditional U-Boot software that allows for automatic discovery of a network installer image. This facilitates the ecosystem model of procuring switches, with a user\u0026rsquo;s own choice of operating system loaded, such as Cumulus Linux.\nIf Cumulus Linux 3.0.0 or later is already installed on your switch and you need to upgrade the software only, you can skip to Upgrading Cumulus Linux below.\n The easiest way to install Cumulus Linux with ONIE is with local HTTP discovery:\n If your host (like a laptop or server) is IPv6-enabled, make sure it is running a web server. If the host is IPv4-enabled, make sure it is running DHCP as well as a web server. Download the Cumulus Linux installation file to the root directory of the web server. Rename this file onie-installer. Connect your host using an Ethernet cable to the management Ethernet port of the switch. Power on the switch. The switch downloads the ONIE image installer and boots. You can watch the progress of the install in your terminal. After the installation completes, the Cumulus Linux login prompt appears in the terminal window.  These steps describe a flexible unattended installation method. You do not need a console cable. A fresh install with ONIE using a local web server typically completes in less than ten minutes.\nYou have more options for installing Cumulus Linux with ONIE. Read Installing a New Cumulus Linux Image to install Cumulus Linux using ONIE in the following ways:\n DHCP/web server with and without DHCP options Web server without DHCP FTP or TFTP without a web server Local file USB   ONIE supports many other discovery mechanisms using USB (copy the installer to the root of the drive), DHCPv6 and DHCPv4, and image copy methods including HTTP, FTP, and TFTP. For more information on these discovery methods, refer to the ONIE documentation.\nAfter installing Cumulus Linux, you are ready to:\n Log in to Cumulus Linux on the switch. Install the Cumulus Linux license. Configure Cumulus Linux. This quick start guide provides instructions on configuring switch ports and a loopback interface.  Upgrade to the Latest Version If you are running a Cumulus Linux version earlier than 3.0.0, you must perform a complete install, as described above. If you already have Cumulus Linux 3.0.0 or later installed on your switch, read Upgrading Cumulus Linux for considerations before starting the process.\nGetting Started When starting Cumulus Linux for the first time, the management port makes a DHCPv4 request. To determine the IP address of the switch, you can cross reference the MAC address of the switch with your DHCP server. The MAC address is typically located on the side of the switch or on the box in which the unit ships.\nLogin Credentials The default installation includes one system account, root, with full system privileges, and one user account, cumulus, with sudo privileges. The root account password is set to null by default (which prohibits login), while the cumulus account is configured with this default password:\nCumulusLinux!  In this quick start guide, you use the cumulus account to configure Cumulus Linux.\nFor optimum security, change the default password (using the passwd command) before you configure Cumulus Linux on the switch.\n All accounts except root are permitted remote SSH login; you can use sudo to grant a non-root account root-level access. Commands that change the system configuration require this elevated level of access.\nFor more information about sudo, read Using sudo to Delegate Privileges.\nSerial Console Management You are encouraged to perform management and configuration over the network, either in band or out of band. Use of the serial console is fully supported; however, many customers prefer the convenience of network-based management.\nTypically, switches ship from the manufacturer with a mating DB9 serial cable. Switches with ONIE are always set to a 115200 baud rate.\nWired Ethernet Management Switches supported in Cumulus Linux always contain at least one dedicated Ethernet management port, which is named eth0. This interface is geared specifically for out-of-band management use. The management interface uses DHCPv4 for addressing by default. You can set a static IP address with the Network Command Line Utility (NCLU).\nExample IP Configuration   NCLU Commands   Set the static IP address with the interface address and interface gateway NCLU commands:\ncumulus@switch:~$ net add interface eth0 ip address 192.0.2.42/24 cumulus@switch:~$ net add interface eth0 ip gateway 192.0.2.1 cumulus@switch:~$ net pending cumulus@switch:~$ net commit  These commands produce the following snippet in the /etc/network/interfaces file:\nauto eth0 iface eth0 address 192.0.2.42/24 gateway 192.0.2.1      Linux Commands   Edit the /etc/network/interfaces file and add the following configuration:\ncumulus@switch:~$ sudo nano /etc/network/interfaces auto eth0 iface eth0 address 192.0.2.42/24 gateway 192.0.2.1    Configuring the Hostname and Timezone To change the hostname, run net add hostname, which modifies both the/etc/hostnameand /etc/hosts files with the desired hostname.\ncumulus@switch:~$ net add hostname \u0026lt;hostname\u0026gt; cumulus@switch:~$ net pending cumulus@switch:~$ net commit  The command prompt in the terminal does not reflect the new hostname until you either log out of the switch or start a new shell.\nWhen you use this NCLU command to set the hostname, DHCP does not override the hostname when you reboot the switch. However, if you disable the hostname setting with NCLU, DHCP does override the hostname the next time you reboot the switch.\n To update the timezone, use the NTP interactive mode:\n Run the following command in a terminal: sudo dpkg-reconfigure tzdata Follow the on screen menu options to select the geographic area and region.  Programs that are already running (including log files) and users currently logged in, do not see timezone changes made with interactive mode. To have the timezone set for all services and daemons, a reboot is required.\n Verifying the System Time Before you install the license, verify that the date and time on the switch are correct. You must correct the date and time if they are incorrect. The wrong date and time can have impacts on the switch, such as the inability to synchronize with Puppet or return errors like this one after you restart switchd:\n Warning: Unit file of switchd.service changed on disk, \u0026lsquo;systemctl daemon-reload\u0026rsquo; recommended.\n Installing the License Cumulus Linux is licensed on a per-instance basis. Each network system is fully operational, enabling any capability to be utilized on the switch with the exception of forwarding on switch panel ports. Only eth0 and console ports are activated on an unlicensed instance of Cumulus Linux. Enabling front panel ports requires a license.\nYou receive a license key from Cumulus Networks or an authorized reseller. Here is a sample license key:\nuser@company.com|thequickbrownfoxjumpsoverthelazydog312  There are three ways to install the license onto the switch:\n Copy the license from a local server. Create a text file with the license and copy it to a server accessible from the switch. On the switch, use the following command to transfer the file directly on the switch, then install the license file:  cumulus@switch:~$ scp user@my_server:/home/user/my_license_file.txt . cumulus@switch:~$ sudo cl-license -i my_license_file.txt  Copy the file to an HTTP server (not HTTPS), then reference the URL when you run cl-license:  cumulus@switch:~$ sudo cl-license -i \u0026lt;URL\u0026gt;  Copy and paste the license key into the cl-license command:  cumulus@switch:~$ sudo cl-license -i \u0026lt;paste license key\u0026gt; ^+d     Release Note ID Summary Description    RN-1130 (CM-22618) On Cumulus RMP, multiple failed ACL installations result in an `out of table resource` message even after reverting to a good rule set After attempting to install unsupported ICMPv6-type rules, the hardware sync fails with an Out of table resource message even after you correct the rules.\nThis is a known issue that is currently being investigated.\n    RN-1133 (CM-22590) NCLU `net show configuration commands` does not show output for an IPv6 rsyslog host NCLU net show configuration commands does not display any output for IPv6 rsyslog hosts.\nThis is a known issue that is currently being investigated.\n    RN-1134 (CM-22589) NCLU `net show configuration commands` displays a syslog command with invalid syntax NCLU net show configuration commands displays a net add syslog command with invalid syntax. For example, if you run the following commands:\ncumulus@switch:~$ net add syslog host ipv4 10.0.0.1 port udp 514 cumulus@switch:~$ net commit  then run net show configuration commands, the output of the command syntax is invalid.\nThis is a known issue that is currently being investigated.\n    RN-1136 (CM-22554) The link state of a bond is not updated when several members are brought down remotely at once If you try to bring down several members of a bond remotely at the same time, the link state of one of the interfaces does not correctly transition to the down state; however, all links show down in hardware.\nThis is a known issue that is currently being investigated.\n    It is not necessary to reboot the switch to activate the switch ports. After you install the license, restart the switchd service. All front panel ports become active and show up as swp1, swp2, and so on.\nIf a license is not installed on a Cumulus Linux switch, the switchd service does not start. After you install the license, start switchd as described above.\n Restart switchd cumulus@switch:~$ sudo systemctl restart switchd.service    Configuring Breakout Ports with Splitter Cables If you are using 4x10G DAC or AOC cables, or want to break out 100G or 40G switch ports, configure the breakout ports. For more details, see Layer 1 and Switch Port Attributes.\nTesting Cable Connectivity By default, all data plane ports (every Ethernet port except the management interface, eth0) are disabled.\nTo test cable connectivity, administratively enable a port:\ncumulus@switch:~$ net add interface swp1 cumulus@switch:~$ net pending cumulus@switch:~$ net commit  To administratively enable all physical ports, run the following command, where swp1-52 represents a switch with switch ports numbered from swp1 to swp52:\ncumulus@switch:~$ net add interface swp1-52 cumulus@switch:~$ net pending cumulus@switch:~$ net commit  To view link status, use the net show interface all command. The following examples show the output of ports in admin down, down, and up modes:\ncumulus@switch:~$ net show interface all Name Speed MTU Mode Summary ----- ------------------------ ------- ----- ------------- -------------------------------------- UP lo N/A 65536 Loopback IP: 10.0.0.11/32, 127.0.0.1/8, ::1/128 UP eth0 1G 1500 Mgmt IP: 192.168.0.11/24(DHCP) UP swp1 (hypervisor_port_1) 1G 1500 Access/L2 Untagged: br0 UP swp2 1G 1500 NotConfigured ADMDN swp45 0M 1500 NotConfigured ADMDN swp46 0M 1500 NotConfigured ADMDN swp47 0M 1500 NotConfigured ADMDN swp48 0M 1500 NotConfigured ADMDN swp49 0M 1500 NotConfigured ADMDN swp50 0M 1500 NotConfigured UP swp51 1G 1500 BondMember Master: bond0(DN) UP blue N/A 65536 NotConfigured DN bond0 N/A 1500 Bond Bond Members: swp51(UN) UP br0 N/A 1500 Bridge/L3 IP: 172.16.1.1/24 Untagged Members: swp1 802.1q Tag: Untagged STP: RootSwitch(32768) UP red N/A 65536 NotConfigured ADMDN rename13 0M 1500 NotConfigured ADMDN vagrant 0M 1500 NotConfigured  Configuring Switch Ports Layer 2 Port Configuration Cumulus Linux does not put all ports into a bridge by default. To create a bridge and configure one or more front panel ports as members of the bridge, use the following examples as guides.\nExamples Example One In the following configuration example, the front panel port swp1 is placed into a bridge called bridge. The NCLU commands are:\ncumulus@switch:~$ net add bridge bridge ports swp1 cumulus@switch:~$ net pending cumulus@switch:~$ net commit  The commands above produce the following /etc/network/interfaces snippet:\nauto bridge iface bridge bridge-ports swp1 bridge-vlan-aware yes    Example Two You can add a range of ports in one command. For example, add swp1 through swp10, swp12, and swp14 through swp20 to bridge:\ncumulus@switch:~$ net add bridge bridge ports swp1-10,12,14-20 cumulus@switch:~$ net pending cumulus@switch:~$ net commit  The commands above produce the following snippet in the /etc/network/interfaces file:\nauto bridge iface bridge bridge-ports swp1 swp2 swp3 swp4 swp5 swp6 swp7 swp8 swp9 swp10 swp12 swp14 swp15 swp16 swp17 swp18 swp19 swp20 bridge-vlan-aware yes    To view the changes in the kernel, use the brctl command:\ncumulus@switch:~$ brctl show bridge name bridge id STP enabled interfaces bridge 8000.443839000004 yes swp1 swp2  Layer 3 Port Configuration You can also use NCLU to configure a front panel port or bridge interface as a layer 3 port.\nIn the following configuration example, the front panel port swp1 is configured as a layer 3 access port:\ncumulus@switch:~$ net add interface swp1 ip address 10.1.1.1/30 cumulus@switch:~$ net pending cumulus@switch:~$ net commit  The commands above produce the following snippet in the /etc/network/interfaces file:\nauto swp1 iface swp1 address 10.1.1.1/30  To add an IP address to a bridge interface, you must put it into a VLAN interface:\ncumulus@switch:~$ net add vlan 100 ip address 10.2.2.1/24 cumulus@switch:~$ net pending cumulus@switch:~$ net commit  The commands above produce the following snippet in the /etc/network/interfaces file:\nauto bridge iface bridge bridge-vids 100 bridge-vlan-aware yes auto vlan100 iface vlan100 address 192.168.10.1/24 vlan-id 100 vlan-raw-device bridge  To view the changes in the kernel, use the ip addr show command:\ncumulus@switch:~$ ip addr show ... 4. swp1: \u0026lt;BROADCAST,MULTICAST,UP,LOWER_UP\u0026gt; mtu 1500 qdisc pfifo_fast master bridge state UP group default qlen 1000 link/ether 44:38:39:00:6e:fe brd ff:ff:ff:ff:ff:ff ... 14: bridge: \u0026lt;BROADCAST,MULTICAST,UP,LOWER_UP\u0026gt; mtu 1500 qdisc noqueue state UP group default link/ether 44:38:39:00:00:04 brd ff:ff:ff:ff:ff:ff inet6 fe80::4638:39ff:fe00:4/64 scope link valid_lft forever preferred_lft forever ...  Configuring a Loopback Interface Cumulus Linux has a loopback preconfigured in the /etc/network/interfaces file. When the switch boots up, it has a loopback interface, called lo, which is up and assigned an IP address of 127.0.0.1.\nThe loopback interface lo must always be specified in the /etc/network/interfaces file and must always be up.\n To see the status of the loopback interface (lo), use the net show interface lo command:\ncumulus@switch:~$ net show interface lo Name MAC Speed MTU Mode -- ------ ----------------- ------- ----- -------- UP lo 00:00:00:00:00:00 N/A 65536 Loopback IP Details ------------------------- -------------------- IP: 127.0.0.1/8, ::1/128 IP Neighbor(ARP) Entries: 0  Note that the loopback is up and is assigned an IP address of 127.0.0.1.\nTo add an IP address to a loopback interface, configure the lo interface with NCLU:\ncumulus@switch:~$ net add loopback lo ip address 10.1.1.1/32 cumulus@switch:~$ net pending cumulus@switch:~$ net commit  You can configure multiple loopback addresses by adding additional address lines:\ncumulus@switch:~$ net add loopback lo ip address 172.16.2.1/24 cumulus@switch:~$ net pending cumulus@switch:~$ net commit  The commands above produce the following snippet in the /etc/network/interfaces file:\nauto lo iface lo inet loopback address 10.1.1.1/32 address 172.16.2.1/24  "
},
{
	"uri": "http://docs.cumulusnetworks.com/cumulus-linux/",
	"title": "Cumulus Linux",
	"tags": [],
	"description": "",
	"content": " Cumulus Linux is the first full-featured Linux operating system for the networking industry. The Debian Jessie-based, networking-focused distribution runs on hardware produced by a broad partner ecosystem, ensuring unmatched customer choice regarding silicon, optics, cables, and systems.\nThis user guide provides in-depth documentation on the Cumulus Linux installation process, system configuration and management, network solutions, and monitoring and troubleshooting recommendations. In addition, the quick start guide provides an end-to-end setup process to get you started.\nWhat\u0026rsquo;s New in Cumulus Linux 3.7 Cumulus Linux 3.7 contains a number of new platforms, features and improvements:\n New platforms include:  QCT QuantaMesh BMS T4048-IX8 (25G Trident 3) QCT QuantaMesh BMS T7032-IX7 (100G Trident 3) Dell S5248F-ON (25G Trident 3) Penguin Arctica 4806xt (10G Trident 2+)  Line side loopback and Terminal loopback mode for Facebook Voyager troubleshooting OVSDB Server High Availability (Early Access) RADIUS Change of Authorization (CoA) requests RADIUS AAA local fallback authentication TACACS+ local fallback authentication EVPN enhancements  Neighbor Discovery (ND) Extended Community support Extended mobility support ECMP support for overlay networks on RIOT-capable Broadcom switches  New NCLU commands:  Show the version of a package Show the interface description (alias) for all interfaces on the switch Show which interfaces are in a VRF and the VNIs for VRF interfaces Change bond mode to IEEE 802.3ad link aggregation mode   For information on bug fixes and known issues present in this release, refer to the product release notes.\nOpen Source Contributions To implement various Cumulus Linux features, Cumulus Networks has forked various software projects, like CFEngine, Netdev and some Puppet Labs packages. The forked code resides in the Cumulus Networks GitHub repository.\nCumulus Networks has also developed and released new applications as open source. The list of open source projects is on the open source software page.\nHardware Compatibility List You can find the most up-to-date hardware compatibility list (HCL) here. Use the HCL to confirm that your switch model is supported by Cumulus Networks. The HCL is updated regularly, listing products by port configuration, manufacturer, and SKU part number.\nDownload the User Guide You can download the current Cumulus Linux User Guide, as well as previous versions, in PDF format:\n Cumulus Linux 3.7.0 User Guide Cumulus Linux 3.6.2 User Guide Cumulus Linux 3.6.1 User Guide Cumulus Linux 3.6.0 User Guide Cumulus Linux 3.5.3 User Guide Cumulus Linux 3.5.2 User Guide Cumulus Linux 3.5.1 User Guide Cumulus Linux 3.4.3 User Guide Cumulus Linux 3.3.2 User Guide Cumulus Linux 3.2.1 User Guide Cumulus Linux 3.1.2 User Guide Cumulus Linux 3.0.1 User Guide  "
},
{
	"uri": "http://docs.cumulusnetworks.com/cumulus-linux/system-configuration/switchd/",
	"title": "switchd",
	"tags": [],
	"description": "",
	"content": " switchd is the daemon at the heart of Cumulus Linux. It communicates between the switch and Cumulus Linux, and all the applications running on Cumulus Linux.\nThe switchd configuration is stored in /etc/cumulus/switchd.conf.\nThe switchd File System switchd also exports a file system, mounted on /cumulus/switchd, that presents all the switchd configuration options as a series of files arranged in a tree structure. You can see the contents by parsing the switchd tree; run tree /cumulus/switchd. The output below is for a switch with one switch port configured:\ncumulus@switch:~$ sudo tree /cumulus/switchd/ /cumulus/switchd/ |-- config | |-- acl | | |-- non_atomic_update_mode | | `-- optimize_hw | |-- arp | | `-- next_hops | |-- buf_util | | |-- measure_interval | | `-- poll_interval | |-- coalesce | | |-- reducer | | `-- timeout | |-- disable_internal_restart | |-- ignore_non_swps | |-- interface | | |-- swp1 | | | `-- storm_control | | | |-- broadcast | | | |-- multicast | | | `-- unknown_unicast | |-- logging | |-- route | | |-- host_max_percent | | `-- table | `-- stats | `-- poll_interval |-- ctrl | |-- acl | |-- hal | | `-- resync | |-- logger | |-- netlink | | `-- resync | |-- resync | `-- sample | `-- ulog_channel |-- run | `-- route_info | |-- ecmp_nh | | |-- count | | |-- max | | `-- max_per_route | |-- host | | |-- count | | |-- count_v4 | | |-- count_v6 | | `-- max | |-- mac | | |-- count | | `-- max | `-- route | |-- count_0 | |-- count_1 | |-- count_total | |-- count_v4 | |-- count_v6 | |-- mask_limit | |-- max_0 | |-- max_1 | `-- max_total `-- version  Configure switchd Parameters You can use cl-cfg to configure many switchd parameters at runtime (like ACLs, interfaces, and route table utilization), which minimizes disruption to your running switch. However, some options are read only and cannot be configured at runtime.\nFor example, to see data related to routes, run:\ncumulus@switch:~$ sudo cl-cfg -a switchd | grep route route.table = 254 route.host_max_percent = 50 cumulus@cumulus:~$  To modify the configuration, run cl-cfg -w. For example, to set the buffer utilization measurement interval to 1 minute, run:\ncumulus@switch:~$ sudo cl-cfg -w switchd buf_util.measure_interval=1  To verify that the value changed, use grep:\ncumulus@switch:~$ cl-cfg -a switchd | grep buf buf_util.poll_interval = 0 buf_util.measure_interval = 1  You can get some of this information by running cl-resource-query; though you cannot update the switchd configuration with it.\n Restart switchd Whenever you modify any switchd hardware configuration file (typically changing any *.conf file that requires making a change to the switching hardware, like /etc/cumulus/datapath/traffic.conf), you must restart switchd for the change to take effect:\ncumulus@switch:~$ sudo systemctl restart switchd.service  You do not have to restart the switchd service when you update a network interface configuration (that is, edit /etc/network/interfaces).\n Restarting switchd causes all network ports to reset in addition to resetting the switch hardware configuration.\n "
},
{
	"uri": "http://docs.cumulusnetworks.com/_footer/",
	"title": "Footer",
	"tags": [],
	"description": "",
	"content": "\n© document.write(new Date().getFullYear()); Cumulus Networks.\nBringing web-scale networking to the enterprise cloud.\n   Products Learn About     Cumulus Linux\nNetQ\nHost Pack\nCumulus Express \u0026nbsp; Going web-scale\nEvents\nBlog\n\u0026nbsp;\n\u0026nbsp; Our story\nCareers\nMedia coverage\nTech docs\nCommunity     ・  ・  ・  ・  ・ \nTrademarks ・ Privacy ・ Terms of service\n"
},
{
	"uri": "http://docs.cumulusnetworks.com/netq/",
	"title": "NetQ",
	"tags": [],
	"description": "",
	"content": "Cumulus® NetQ is a network operations tool set that provides actionable insight into and operational intelligence about the health of the entire Linux-based data center — from the container, virtual machine, or host, all the way to the switch and port. Working hand-in-hand with Cumulus Linux, NetQ enables organizations to validate network state, both during regular operations and for post-mortem diagnostic analysis. Running on Cumulus Linux switches and other certified systems — such as Ubuntu®, Red Hat®, and CentOS hosts — NetQ captures network data and other state information in real time, providing cloud architects and network operations teams the ability to operate with visibility into the entire network. It is integrated with container orchestrators and the Netlink interface to make this happen. With NetQ, network operations changes from a manual, reactive, box-by-box approach to an automated, informed and agile one.\nThe system uses a three-pronged approach to validating networks:\n Preventative Validation: NetQ easily validates potential network configuration changes in a virtualized environment or lab using check, show and trace algorithms. NetQ eliminates the need to check switches or servers one by one and can reduce manual errors before they are rolled into production (one of the main causes of network downtime). Proactive Alerting: NetQ detects faulty network states that can result in packet loss or connectivity issues, and alerts the user with precise fault location data for faster remediation, greatly improving network agility and reducing downtime costs. Diagnostic Troubleshooting: NetQ provides the ability to trace network paths, replay the network state at a time in the past, review fabric-wide event change logs, and diagnose the root cause of state deviations.  NetQ also offers Image and Provisioning Management (IPM), which makes it possible to get your new Cumulus Linux switches up and running quickly by providing bootstrapping and lifecycle management capabilities, including image and ZTP configuration management. IPM contains local storage and distribution services for the Cumulus Linux network operating system (NOS) and provisioning scripts used to deploy and upgrade Cumulus Linux and NetQ. With IPM, network deployment changes from a tedious box-by-box installation process to a consistent and predictable one.\n"
},
{
	"uri": "http://docs.cumulusnetworks.com/cumulus-linux/system-configuration/",
	"title": "System Configuration",
	"tags": [],
	"description": "",
	"content": "This section describes how to configure your switch. It covers the following topics:\n NCLU Network Command Line Utility   switchd   "
},
{
	"uri": "http://docs.cumulusnetworks.com/_header/",
	"title": "Header",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "http://docs.cumulusnetworks.com/",
	"title": "Documentation",
	"tags": [],
	"description": "",
	"content": " Cumulus Networks Documentation Home Within the Cumulus Networks documentation pages, you can find the user guides and quick start guides to help get you started with Cumulus Networks products. The documentation is available in HTML format (and, for some products, PDF).\nLinks to most current version of each product\u0026rsquo;s documentation are available under Latest Releases below.\nIn the Product and Version menu above are links to all the currently supported versions of Cumulus Networks products. The Hardware Guides link takes you to the Hardware Compatibility List.\nLatest Releases  Cumulus Linux NetQ  "
},
{
	"uri": "http://docs.cumulusnetworks.com/categories/",
	"title": "Categories",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "http://docs.cumulusnetworks.com/tags/",
	"title": "Tags",
	"tags": [],
	"description": "",
	"content": ""
}]